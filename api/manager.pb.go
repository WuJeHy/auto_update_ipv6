// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.9
// source: api/manager.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordWatchType int32

const (
	RecordWatchType_WatchTypeUnknown RecordWatchType = 0
	RecordWatchType_WatchTypeLocal   RecordWatchType = 1
	RecordWatchType_WatchTypeEsxi    RecordWatchType = 2
)

// Enum value maps for RecordWatchType.
var (
	RecordWatchType_name = map[int32]string{
		0: "WatchTypeUnknown",
		1: "WatchTypeLocal",
		2: "WatchTypeEsxi",
	}
	RecordWatchType_value = map[string]int32{
		"WatchTypeUnknown": 0,
		"WatchTypeLocal":   1,
		"WatchTypeEsxi":    2,
	}
)

func (x RecordWatchType) Enum() *RecordWatchType {
	p := new(RecordWatchType)
	*p = x
	return p
}

func (x RecordWatchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordWatchType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_manager_proto_enumTypes[0].Descriptor()
}

func (RecordWatchType) Type() protoreflect.EnumType {
	return &file_api_manager_proto_enumTypes[0]
}

func (x RecordWatchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordWatchType.Descriptor instead.
func (RecordWatchType) EnumDescriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{0}
}

type UpdateLoggerLevelReq_Level int32

const (
	UpdateLoggerLevelReq_Debug   UpdateLoggerLevelReq_Level = 0
	UpdateLoggerLevelReq_Info    UpdateLoggerLevelReq_Level = 1
	UpdateLoggerLevelReq_Warning UpdateLoggerLevelReq_Level = 2
	UpdateLoggerLevelReq_Error   UpdateLoggerLevelReq_Level = 3
)

// Enum value maps for UpdateLoggerLevelReq_Level.
var (
	UpdateLoggerLevelReq_Level_name = map[int32]string{
		0: "Debug",
		1: "Info",
		2: "Warning",
		3: "Error",
	}
	UpdateLoggerLevelReq_Level_value = map[string]int32{
		"Debug":   0,
		"Info":    1,
		"Warning": 2,
		"Error":   3,
	}
)

func (x UpdateLoggerLevelReq_Level) Enum() *UpdateLoggerLevelReq_Level {
	p := new(UpdateLoggerLevelReq_Level)
	*p = x
	return p
}

func (x UpdateLoggerLevelReq_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateLoggerLevelReq_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_api_manager_proto_enumTypes[1].Descriptor()
}

func (UpdateLoggerLevelReq_Level) Type() protoreflect.EnumType {
	return &file_api_manager_proto_enumTypes[1]
}

func (x UpdateLoggerLevelReq_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateLoggerLevelReq_Level.Descriptor instead.
func (UpdateLoggerLevelReq_Level) EnumDescriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{0, 0}
}

type UpdateLoggerLevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level UpdateLoggerLevelReq_Level `protobuf:"varint,1,opt,name=level,proto3,enum=api.UpdateLoggerLevelReq_Level" json:"level,omitempty"`
}

func (x *UpdateLoggerLevelReq) Reset() {
	*x = UpdateLoggerLevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoggerLevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoggerLevelReq) ProtoMessage() {}

func (x *UpdateLoggerLevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoggerLevelReq.ProtoReflect.Descriptor instead.
func (*UpdateLoggerLevelReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateLoggerLevelReq) GetLevel() UpdateLoggerLevelReq_Level {
	if x != nil {
		return x.Level
	}
	return UpdateLoggerLevelReq_Debug
}

type UpdateLoggerLevelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLoggerLevelResp) Reset() {
	*x = UpdateLoggerLevelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoggerLevelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoggerLevelResp) ProtoMessage() {}

func (x *UpdateLoggerLevelResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoggerLevelResp.ProtoReflect.Descriptor instead.
func (*UpdateLoggerLevelResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{1}
}

type ResetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetReq) Reset() {
	*x = ResetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetReq) ProtoMessage() {}

func (x *ResetReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetReq.ProtoReflect.Descriptor instead.
func (*ResetReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{2}
}

type ResetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetResp) Reset() {
	*x = ResetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResp) ProtoMessage() {}

func (x *ResetResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResp.ProtoReflect.Descriptor instead.
func (*ResetResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{3}
}

type LocalConfigFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preview bool `protobuf:"varint,1,opt,name=Preview,proto3" json:"Preview,omitempty"`
}

func (x *LocalConfigFileReq) Reset() {
	*x = LocalConfigFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalConfigFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalConfigFileReq) ProtoMessage() {}

func (x *LocalConfigFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalConfigFileReq.ProtoReflect.Descriptor instead.
func (*LocalConfigFileReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{4}
}

func (x *LocalConfigFileReq) GetPreview() bool {
	if x != nil {
		return x.Preview
	}
	return false
}

type LocalConfigFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalConfigFileResp) Reset() {
	*x = LocalConfigFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalConfigFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalConfigFileResp) ProtoMessage() {}

func (x *LocalConfigFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalConfigFileResp.ProtoReflect.Descriptor instead.
func (*LocalConfigFileResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{5}
}

type WriteConfigFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordFile string `protobuf:"bytes,1,opt,name=RecordFile,proto3" json:"RecordFile,omitempty"`
}

func (x *WriteConfigFileReq) Reset() {
	*x = WriteConfigFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteConfigFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteConfigFileReq) ProtoMessage() {}

func (x *WriteConfigFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteConfigFileReq.ProtoReflect.Descriptor instead.
func (*WriteConfigFileReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{6}
}

func (x *WriteConfigFileReq) GetRecordFile() string {
	if x != nil {
		return x.RecordFile
	}
	return ""
}

type WriteConfigFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WriteConfigFileResp) Reset() {
	*x = WriteConfigFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteConfigFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteConfigFileResp) ProtoMessage() {}

func (x *WriteConfigFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteConfigFileResp.ProtoReflect.Descriptor instead.
func (*WriteConfigFileResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{7}
}

type RecordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RR        string          `protobuf:"bytes,1,opt,name=RR,proto3" json:"RR,omitempty"`
	RecordId  string          `protobuf:"bytes,2,opt,name=RecordId,proto3" json:"RecordId,omitempty"`
	Type      string          `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	WatchType RecordWatchType `protobuf:"varint,4,opt,name=WatchType,proto3,enum=api.RecordWatchType" json:"WatchType,omitempty"`
	VMName    string          `protobuf:"bytes,5,opt,name=VMName,proto3" json:"VMName,omitempty"`
}

func (x *RecordInfo) Reset() {
	*x = RecordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordInfo) ProtoMessage() {}

func (x *RecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordInfo.ProtoReflect.Descriptor instead.
func (*RecordInfo) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{8}
}

func (x *RecordInfo) GetRR() string {
	if x != nil {
		return x.RR
	}
	return ""
}

func (x *RecordInfo) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *RecordInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RecordInfo) GetWatchType() RecordWatchType {
	if x != nil {
		return x.WatchType
	}
	return RecordWatchType_WatchTypeUnknown
}

func (x *RecordInfo) GetVMName() string {
	if x != nil {
		return x.VMName
	}
	return ""
}

type AddRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddRecordResp) Reset() {
	*x = AddRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordResp) ProtoMessage() {}

func (x *AddRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordResp.ProtoReflect.Descriptor instead.
func (*AddRecordResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{9}
}

type DelRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId string `protobuf:"bytes,1,opt,name=RecordId,proto3" json:"RecordId,omitempty"`
}

func (x *DelRecordReq) Reset() {
	*x = DelRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecordReq) ProtoMessage() {}

func (x *DelRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecordReq.ProtoReflect.Descriptor instead.
func (*DelRecordReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{10}
}

func (x *DelRecordReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type DelRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelRecordResp) Reset() {
	*x = DelRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecordResp) ProtoMessage() {}

func (x *DelRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecordResp.ProtoReflect.Descriptor instead.
func (*DelRecordResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{11}
}

type EditRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId  string           `protobuf:"bytes,1,opt,name=RecordId,proto3" json:"RecordId,omitempty"`
	RR        *string          `protobuf:"bytes,2,opt,name=RR,proto3,oneof" json:"RR,omitempty"`
	Type      *string          `protobuf:"bytes,3,opt,name=Type,proto3,oneof" json:"Type,omitempty"`
	WatchType *RecordWatchType `protobuf:"varint,4,opt,name=WatchType,proto3,enum=api.RecordWatchType,oneof" json:"WatchType,omitempty"`
	VMName    *string          `protobuf:"bytes,5,opt,name=VMName,proto3,oneof" json:"VMName,omitempty"`
}

func (x *EditRecordReq) Reset() {
	*x = EditRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRecordReq) ProtoMessage() {}

func (x *EditRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRecordReq.ProtoReflect.Descriptor instead.
func (*EditRecordReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{12}
}

func (x *EditRecordReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *EditRecordReq) GetRR() string {
	if x != nil && x.RR != nil {
		return *x.RR
	}
	return ""
}

func (x *EditRecordReq) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *EditRecordReq) GetWatchType() RecordWatchType {
	if x != nil && x.WatchType != nil {
		return *x.WatchType
	}
	return RecordWatchType_WatchTypeUnknown
}

func (x *EditRecordReq) GetVMName() string {
	if x != nil && x.VMName != nil {
		return *x.VMName
	}
	return ""
}

type EditRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditRecordResp) Reset() {
	*x = EditRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRecordResp) ProtoMessage() {}

func (x *EditRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRecordResp.ProtoReflect.Descriptor instead.
func (*EditRecordResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{13}
}

type ListRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int64            `protobuf:"varint,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset    int64            `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	WatchType *RecordWatchType `protobuf:"varint,3,opt,name=WatchType,proto3,enum=api.RecordWatchType,oneof" json:"WatchType,omitempty"`
}

func (x *ListRecordReq) Reset() {
	*x = ListRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecordReq) ProtoMessage() {}

func (x *ListRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecordReq.ProtoReflect.Descriptor instead.
func (*ListRecordReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{14}
}

func (x *ListRecordReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRecordReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRecordReq) GetWatchType() RecordWatchType {
	if x != nil && x.WatchType != nil {
		return *x.WatchType
	}
	return RecordWatchType_WatchTypeUnknown
}

type ListRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   int64         `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	Records []*RecordInfo `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *ListRecordResp) Reset() {
	*x = ListRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecordResp) ProtoMessage() {}

func (x *ListRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecordResp.ProtoReflect.Descriptor instead.
func (*ListRecordResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{15}
}

func (x *ListRecordResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListRecordResp) GetRecords() []*RecordInfo {
	if x != nil {
		return x.Records
	}
	return nil
}

type UpdateApiKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateApiKeyReq) Reset() {
	*x = UpdateApiKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiKeyReq) ProtoMessage() {}

func (x *UpdateApiKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiKeyReq.ProtoReflect.Descriptor instead.
func (*UpdateApiKeyReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{16}
}

type UpdateApiKeyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateApiKeyResp) Reset() {
	*x = UpdateApiKeyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiKeyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiKeyResp) ProtoMessage() {}

func (x *UpdateApiKeyResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiKeyResp.ProtoReflect.Descriptor instead.
func (*UpdateApiKeyResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{17}
}

type UpdateEsxiConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEsxiConfigReq) Reset() {
	*x = UpdateEsxiConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEsxiConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEsxiConfigReq) ProtoMessage() {}

func (x *UpdateEsxiConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEsxiConfigReq.ProtoReflect.Descriptor instead.
func (*UpdateEsxiConfigReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{18}
}

type UpdateEsxiConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEsxiConfigResp) Reset() {
	*x = UpdateEsxiConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEsxiConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEsxiConfigResp) ProtoMessage() {}

func (x *UpdateEsxiConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEsxiConfigResp.ProtoReflect.Descriptor instead.
func (*UpdateEsxiConfigResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{19}
}

type UpdateAppConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAppConfigReq) Reset() {
	*x = UpdateAppConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppConfigReq) ProtoMessage() {}

func (x *UpdateAppConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppConfigReq.ProtoReflect.Descriptor instead.
func (*UpdateAppConfigReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{20}
}

type UpdateAppConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAppConfigResp) Reset() {
	*x = UpdateAppConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppConfigResp) ProtoMessage() {}

func (x *UpdateAppConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppConfigResp.ProtoReflect.Descriptor instead.
func (*UpdateAppConfigResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{21}
}

type GetConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigReq) Reset() {
	*x = GetConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReq) ProtoMessage() {}

func (x *GetConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReq.ProtoReflect.Descriptor instead.
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{22}
}

type GetConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigResp) Reset() {
	*x = GetConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResp) ProtoMessage() {}

func (x *GetConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResp.ProtoReflect.Descriptor instead.
func (*GetConfigResp) Descriptor() ([]byte, []int) {
	return file_api_manager_proto_rawDescGZIP(), []int{23}
}

var File_api_manager_proto protoreflect.FileDescriptor

var file_api_manager_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x35, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x34, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x22, 0x17,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x22, 0x0b, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x2e, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x22, 0x15, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x34, 0x0a, 0x12, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x98, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x52, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x52, 0x52, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x4d, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x4d, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x0f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x2a, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0xd8, 0x01,
	0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x52,
	0x52, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x52, 0x52, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x09, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x02, 0x52, 0x09, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x56, 0x4d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x56, 0x4d, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x52, 0x52, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x56, 0x4d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x51, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x15, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x73, 0x78, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x73, 0x78, 0x69,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2a, 0x4e, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x73, 0x78, 0x69, 0x10, 0x02, 0x32, 0xdd, 0x03, 0x0a, 0x07, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0f, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a,
	0x0a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x61, 0x70, 0x69, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_manager_proto_rawDescOnce sync.Once
	file_api_manager_proto_rawDescData = file_api_manager_proto_rawDesc
)

func file_api_manager_proto_rawDescGZIP() []byte {
	file_api_manager_proto_rawDescOnce.Do(func() {
		file_api_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_manager_proto_rawDescData)
	})
	return file_api_manager_proto_rawDescData
}

var file_api_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_api_manager_proto_goTypes = []interface{}{
	(RecordWatchType)(0),            // 0: api.RecordWatchType
	(UpdateLoggerLevelReq_Level)(0), // 1: api.UpdateLoggerLevelReq.Level
	(*UpdateLoggerLevelReq)(nil),    // 2: api.UpdateLoggerLevelReq
	(*UpdateLoggerLevelResp)(nil),   // 3: api.UpdateLoggerLevelResp
	(*ResetReq)(nil),                // 4: api.ResetReq
	(*ResetResp)(nil),               // 5: api.ResetResp
	(*LocalConfigFileReq)(nil),      // 6: api.LocalConfigFileReq
	(*LocalConfigFileResp)(nil),     // 7: api.LocalConfigFileResp
	(*WriteConfigFileReq)(nil),      // 8: api.WriteConfigFileReq
	(*WriteConfigFileResp)(nil),     // 9: api.WriteConfigFileResp
	(*RecordInfo)(nil),              // 10: api.RecordInfo
	(*AddRecordResp)(nil),           // 11: api.AddRecordResp
	(*DelRecordReq)(nil),            // 12: api.DelRecordReq
	(*DelRecordResp)(nil),           // 13: api.DelRecordResp
	(*EditRecordReq)(nil),           // 14: api.EditRecordReq
	(*EditRecordResp)(nil),          // 15: api.EditRecordResp
	(*ListRecordReq)(nil),           // 16: api.ListRecordReq
	(*ListRecordResp)(nil),          // 17: api.ListRecordResp
	(*UpdateApiKeyReq)(nil),         // 18: api.UpdateApiKeyReq
	(*UpdateApiKeyResp)(nil),        // 19: api.UpdateApiKeyResp
	(*UpdateEsxiConfigReq)(nil),     // 20: api.UpdateEsxiConfigReq
	(*UpdateEsxiConfigResp)(nil),    // 21: api.UpdateEsxiConfigResp
	(*UpdateAppConfigReq)(nil),      // 22: api.UpdateAppConfigReq
	(*UpdateAppConfigResp)(nil),     // 23: api.UpdateAppConfigResp
	(*GetConfigReq)(nil),            // 24: api.GetConfigReq
	(*GetConfigResp)(nil),           // 25: api.GetConfigResp
}
var file_api_manager_proto_depIdxs = []int32{
	1,  // 0: api.UpdateLoggerLevelReq.level:type_name -> api.UpdateLoggerLevelReq.Level
	0,  // 1: api.RecordInfo.WatchType:type_name -> api.RecordWatchType
	0,  // 2: api.EditRecordReq.WatchType:type_name -> api.RecordWatchType
	0,  // 3: api.ListRecordReq.WatchType:type_name -> api.RecordWatchType
	10, // 4: api.ListRecordResp.records:type_name -> api.RecordInfo
	6,  // 5: api.Manager.LocalConfigFile:input_type -> api.LocalConfigFileReq
	8,  // 6: api.Manager.WriteConfigFile:input_type -> api.WriteConfigFileReq
	10, // 7: api.Manager.AddRecord:input_type -> api.RecordInfo
	12, // 8: api.Manager.DelRecord:input_type -> api.DelRecordReq
	14, // 9: api.Manager.EditRecord:input_type -> api.EditRecordReq
	16, // 10: api.Manager.ListRecord:input_type -> api.ListRecordReq
	4,  // 11: api.Manager.Reset:input_type -> api.ResetReq
	2,  // 12: api.Manager.UpdateLoggerLevel:input_type -> api.UpdateLoggerLevelReq
	7,  // 13: api.Manager.LocalConfigFile:output_type -> api.LocalConfigFileResp
	9,  // 14: api.Manager.WriteConfigFile:output_type -> api.WriteConfigFileResp
	11, // 15: api.Manager.AddRecord:output_type -> api.AddRecordResp
	13, // 16: api.Manager.DelRecord:output_type -> api.DelRecordResp
	15, // 17: api.Manager.EditRecord:output_type -> api.EditRecordResp
	17, // 18: api.Manager.ListRecord:output_type -> api.ListRecordResp
	5,  // 19: api.Manager.Reset:output_type -> api.ResetResp
	3,  // 20: api.Manager.UpdateLoggerLevel:output_type -> api.UpdateLoggerLevelResp
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_manager_proto_init() }
func file_api_manager_proto_init() {
	if File_api_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoggerLevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoggerLevelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalConfigFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalConfigFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteConfigFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteConfigFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiKeyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEsxiConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEsxiConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_manager_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_api_manager_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_manager_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_manager_proto_goTypes,
		DependencyIndexes: file_api_manager_proto_depIdxs,
		EnumInfos:         file_api_manager_proto_enumTypes,
		MessageInfos:      file_api_manager_proto_msgTypes,
	}.Build()
	File_api_manager_proto = out.File
	file_api_manager_proto_rawDesc = nil
	file_api_manager_proto_goTypes = nil
	file_api_manager_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ManagerClient is the client API for Manager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManagerClient interface {
	LocalConfigFile(ctx context.Context, in *LocalConfigFileReq, opts ...grpc.CallOption) (*LocalConfigFileResp, error)
	WriteConfigFile(ctx context.Context, in *WriteConfigFileReq, opts ...grpc.CallOption) (*WriteConfigFileResp, error)
	AddRecord(ctx context.Context, in *RecordInfo, opts ...grpc.CallOption) (*AddRecordResp, error)
	DelRecord(ctx context.Context, in *DelRecordReq, opts ...grpc.CallOption) (*DelRecordResp, error)
	EditRecord(ctx context.Context, in *EditRecordReq, opts ...grpc.CallOption) (*EditRecordResp, error)
	ListRecord(ctx context.Context, in *ListRecordReq, opts ...grpc.CallOption) (*ListRecordResp, error)
	Reset(ctx context.Context, in *ResetReq, opts ...grpc.CallOption) (*ResetResp, error)
	UpdateLoggerLevel(ctx context.Context, in *UpdateLoggerLevelReq, opts ...grpc.CallOption) (*UpdateLoggerLevelResp, error)
}

type managerClient struct {
	cc grpc.ClientConnInterface
}

func NewManagerClient(cc grpc.ClientConnInterface) ManagerClient {
	return &managerClient{cc}
}

func (c *managerClient) LocalConfigFile(ctx context.Context, in *LocalConfigFileReq, opts ...grpc.CallOption) (*LocalConfigFileResp, error) {
	out := new(LocalConfigFileResp)
	err := c.cc.Invoke(ctx, "/api.Manager/LocalConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) WriteConfigFile(ctx context.Context, in *WriteConfigFileReq, opts ...grpc.CallOption) (*WriteConfigFileResp, error) {
	out := new(WriteConfigFileResp)
	err := c.cc.Invoke(ctx, "/api.Manager/WriteConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) AddRecord(ctx context.Context, in *RecordInfo, opts ...grpc.CallOption) (*AddRecordResp, error) {
	out := new(AddRecordResp)
	err := c.cc.Invoke(ctx, "/api.Manager/AddRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) DelRecord(ctx context.Context, in *DelRecordReq, opts ...grpc.CallOption) (*DelRecordResp, error) {
	out := new(DelRecordResp)
	err := c.cc.Invoke(ctx, "/api.Manager/DelRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) EditRecord(ctx context.Context, in *EditRecordReq, opts ...grpc.CallOption) (*EditRecordResp, error) {
	out := new(EditRecordResp)
	err := c.cc.Invoke(ctx, "/api.Manager/EditRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ListRecord(ctx context.Context, in *ListRecordReq, opts ...grpc.CallOption) (*ListRecordResp, error) {
	out := new(ListRecordResp)
	err := c.cc.Invoke(ctx, "/api.Manager/ListRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) Reset(ctx context.Context, in *ResetReq, opts ...grpc.CallOption) (*ResetResp, error) {
	out := new(ResetResp)
	err := c.cc.Invoke(ctx, "/api.Manager/Reset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) UpdateLoggerLevel(ctx context.Context, in *UpdateLoggerLevelReq, opts ...grpc.CallOption) (*UpdateLoggerLevelResp, error) {
	out := new(UpdateLoggerLevelResp)
	err := c.cc.Invoke(ctx, "/api.Manager/UpdateLoggerLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManagerServer is the server API for Manager service.
type ManagerServer interface {
	LocalConfigFile(context.Context, *LocalConfigFileReq) (*LocalConfigFileResp, error)
	WriteConfigFile(context.Context, *WriteConfigFileReq) (*WriteConfigFileResp, error)
	AddRecord(context.Context, *RecordInfo) (*AddRecordResp, error)
	DelRecord(context.Context, *DelRecordReq) (*DelRecordResp, error)
	EditRecord(context.Context, *EditRecordReq) (*EditRecordResp, error)
	ListRecord(context.Context, *ListRecordReq) (*ListRecordResp, error)
	Reset(context.Context, *ResetReq) (*ResetResp, error)
	UpdateLoggerLevel(context.Context, *UpdateLoggerLevelReq) (*UpdateLoggerLevelResp, error)
}

// UnimplementedManagerServer can be embedded to have forward compatible implementations.
type UnimplementedManagerServer struct {
}

func (*UnimplementedManagerServer) LocalConfigFile(context.Context, *LocalConfigFileReq) (*LocalConfigFileResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LocalConfigFile not implemented")
}
func (*UnimplementedManagerServer) WriteConfigFile(context.Context, *WriteConfigFileReq) (*WriteConfigFileResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteConfigFile not implemented")
}
func (*UnimplementedManagerServer) AddRecord(context.Context, *RecordInfo) (*AddRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRecord not implemented")
}
func (*UnimplementedManagerServer) DelRecord(context.Context, *DelRecordReq) (*DelRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelRecord not implemented")
}
func (*UnimplementedManagerServer) EditRecord(context.Context, *EditRecordReq) (*EditRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditRecord not implemented")
}
func (*UnimplementedManagerServer) ListRecord(context.Context, *ListRecordReq) (*ListRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRecord not implemented")
}
func (*UnimplementedManagerServer) Reset(context.Context, *ResetReq) (*ResetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reset not implemented")
}
func (*UnimplementedManagerServer) UpdateLoggerLevel(context.Context, *UpdateLoggerLevelReq) (*UpdateLoggerLevelResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLoggerLevel not implemented")
}

func RegisterManagerServer(s *grpc.Server, srv ManagerServer) {
	s.RegisterService(&_Manager_serviceDesc, srv)
}

func _Manager_LocalConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocalConfigFileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).LocalConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/LocalConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).LocalConfigFile(ctx, req.(*LocalConfigFileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_WriteConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteConfigFileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).WriteConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/WriteConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).WriteConfigFile(ctx, req.(*WriteConfigFileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_AddRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecordInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).AddRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/AddRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).AddRecord(ctx, req.(*RecordInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_DelRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).DelRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/DelRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).DelRecord(ctx, req.(*DelRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_EditRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).EditRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/EditRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).EditRecord(ctx, req.(*EditRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ListRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ListRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/ListRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ListRecord(ctx, req.(*ListRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).Reset(ctx, req.(*ResetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_UpdateLoggerLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLoggerLevelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).UpdateLoggerLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Manager/UpdateLoggerLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).UpdateLoggerLevel(ctx, req.(*UpdateLoggerLevelReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Manager",
	HandlerType: (*ManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LocalConfigFile",
			Handler:    _Manager_LocalConfigFile_Handler,
		},
		{
			MethodName: "WriteConfigFile",
			Handler:    _Manager_WriteConfigFile_Handler,
		},
		{
			MethodName: "AddRecord",
			Handler:    _Manager_AddRecord_Handler,
		},
		{
			MethodName: "DelRecord",
			Handler:    _Manager_DelRecord_Handler,
		},
		{
			MethodName: "EditRecord",
			Handler:    _Manager_EditRecord_Handler,
		},
		{
			MethodName: "ListRecord",
			Handler:    _Manager_ListRecord_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _Manager_Reset_Handler,
		},
		{
			MethodName: "UpdateLoggerLevel",
			Handler:    _Manager_UpdateLoggerLevel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/manager.proto",
}
